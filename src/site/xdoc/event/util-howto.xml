<?xml version="1.0"?>

<!--
     Licensed to the Apache Software Foundation (ASF) under one or more
     contributor license agreements.  See the NOTICE file distributed with
     this work for additional information regarding copyright ownership.
     The ASF licenses this file to You under the Apache License, Version 2.0
     (the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at
     
     http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed  under the  License is distributed on an "AS IS" BASIS,
     WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
     implied.
     
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<document>
    <properties>
        <title>Event - How To Use Util</title>
    </properties>
    <body>
        <section name="Getting the System Info">
            <p>
        Util has one utility: SystemUtil.  SystemUtil is a static
        class that performs its magic when the class is loaded.
        It stores the information because it is unlikely that you
        will ever go from one to two processors while your machine
        is running.  The code snippet below demonstrates how to
        get any and all the relavant information:
            </p>
            <source>
                <![CDATA[
public void dumpInfo()
{
    System.out.println( "Number of Processors: " + SystemUtil.numProcessors() );
    System.out.println( "CPU Info:             " + SystemUtil.cpuInfo() );
    System.out.println( "Architecture:         " + SystemUtil.architecture() );
    System.out.println( "Operating System:     " + SystemUtil.operatingSystem() );
    System.out.println( "OS Version:           " + SystemUtil.osVersion() );
}
      ]]>
            </source>
            <p>
        As you can see there is no real mystery here.  The method above
        uses every available SystemUtil method, and it is taken directly
        from the JUnit TestCase for SystemUtil.
            </p>
        </section>
    </body>
</document>
