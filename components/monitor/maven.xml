<?xml version="1.0"?>
<!-- 
 Copyright 2004 The Apache Software Foundation
 Licensed  under the  Apache License,  Version 2.0  (the "License");
 you may not use  this file  except in  compliance with the License.
 You may obtain a copy of the License at 
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed  under the  License is distributed on an "AS IS" BASIS,
 WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
 implied.
  
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project default="java:jar"
    xmlns:j="jelly:core"
    xmlns:ant="jelly:ant">

    <!-- include the excalibur-wide custom project properties -->
    <property file="${basedir}/project.properties"/>

    <!-- copy additional test resources -->
    <postGoal name="test:prepare-filesystem">
        <echo>
            copy additional unit test resources
            from ${pom.build.unitTestSourceDirectory}
            to ${maven.test.dest}
        </echo>
        <copy todir="${maven.build.dir}/test-classes">
            <fileset dir="${pom.build.unitTestSourceDirectory}">
                <exclude name="**/*.java"/>
                <exclude name="**/package.html"/>
            </fileset>
        </copy>
    </postGoal>

    <!-- ===================================================================== -->
    <!-- Generate fortress meta descriptors                                    -->
    <!-- ===================================================================== -->

    <postGoal name="java:compile">
        <attainGoal name="provide-fortress-meta"/>
    </postGoal>

    <goal
        name="provide-fortress-meta"
        description="Add fortress meta descriptors to the compiled classes">

        <taskdef name="fortress-collect-meta"
            classname="org.apache.avalon.fortress.tools.ComponentMetaInfoCollector">
            <classpath>
                <path refid="maven.dependency.classpath"/>
                <pathelement path="${java.build.dir}"/>
            </classpath>
        </taskdef>

        <fortress-collect-meta destdir="${maven.build.dir}/classes">
            <fileset dir="${maven.src.dir}/java"/>
        </fortress-collect-meta>

        <!-- save it for future use -->
        <!--<attainGoal name="save-fortress-meta"/>-->
    </goal>

    <!-- TODO: remove this, its probably not needed! -->

    <!-- ===================================================================== -->
    <!-- Because the copy operation is very destructive - we first erase all   -->
    <!-- existing fortress meta info, we want to make sure that the info has   -->
    <!-- really been generated.                                                -->
    <!-- This is what save-fortress-meta does. It is intended to be invoked    -->
    <!-- directly from the command line directly, via                          -->
    <!-- ant -f fortress-meta.xml save-fotress-meta.                           -->
    <!-- ===================================================================== -->
    <goal
        name="save-fortress-meta"
        description="Copy generated fortress meta back under ./src">

    <!-- ===================================================================== -->
    <!-- Do copy the generated meta to ${fortress-static-meta.dir} without any -->
    <!-- checks. Invoked from conditionally-save-fortress-meta and from        -->
    <!-- provide-fortress-meta-dynamic.                                        -->

        <!--delete stale meta info-->
        <delete dir="${fortress-static-meta.dir}"/>

        <mkdir dir="${fortress-static-meta.dir}"/>

        <copy todir="${fortress-static-meta.dir}">
            <fileset dir="${build.classes}">
                <include name="services.list"/>
                <include name="META-INF/services/*"/>
                <include name="**/*.meta"/>
                <include name="**/*.dep"/>
            </fileset>
        </copy>

    </goal>
</project>
