<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.apache.excalibur</groupId>
    <artifactId>excalibur-parent</artifactId>
    <version>4-SNAPSHOT</version>
    <relativePath>../../../parent/pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.excalibur.components</groupId>
  <artifactId>excalibur-monitor</artifactId>
  <version>${version.excalibur.component}</version>
  <packaging>bundle</packaging>
  <name>Excalibur Monitor</name>
  <inceptionYear>1997</inceptionYear>
  <description>
    Avalon Excalibur's resource management code allows you to be notified when a resource has changed. There
    are two methods of resource management: active and passive. Passive resource management acts as a holder
    for resources, and after the resource has been modified through it's normal API, notification goes to all
    listeners. Active resource management does the same, but it also polls the resources periodically to see
    if the resource was modified through an external method. Active resource management is perfect for
    monitoring files because they can be modified by external programs, and your program will be notified when
    the change occurs instead of constantly polling it.
  </description>
  <dependencies>
    <dependency>
      <groupId>org.apache.avalon.framework</groupId>
      <artifactId>avalon-framework-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.excalibur.components</groupId>
      <artifactId>excalibur-sourceresolve</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.excalibur.testcase</groupId>
      <artifactId>excalibur-testcase</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.excalibur.fortress.meta</groupId>
        <artifactId>maven-fortress-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/excalibur/trunk/components/monitor</connection>
    <url>http://svn.apache.org/viewcvs.cgi/excalibur/trunk/components/monitor</url>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/excalibur/trunk/excalibur-components-modules/excalibur-monitor</developerConnection>
  </scm>
</project>
